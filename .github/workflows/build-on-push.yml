name: Build

on:
    workflow_dispatch:
    push:

# Must match the project() name in CMakeLists.txt
env:
    APP_NAME: pico-xt
    
# Build binary
jobs:
    build:
        runs-on: ubuntu-latest
        name: Build
        steps:
          
          - name: Install dependencies
            run: |
                 sudo apt update && \
                 sudo apt install -y git python3 && \
                 sudo apt install -y cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libusb-1.0-0-dev
                 
          - name: Check out this repository
            uses: actions/checkout@v3

          - name: Print Working directory
            run: echo $HOME && pwd && ls -la

          - name: Update line containing pico_set_program_version() in CMakelists.txt with tag name.
            run: |
                 # Extract the tag name that triggered the event and remove the 'refs/tags/' prefix
                 input_string=${{ github.ref }}
                 prefix="refs/tags/"
                 tag="No versioninfo found"
                 if [[ $input_string == $prefix* ]]; then
                      echo "The string starts with 'refs/tags/'."
                      tag="${input_string#$prefix}"     
                      echo "Tag is ${tag}"
                      sed -i "s/^[[:space:]]*pico_set_program_version(.*/pico_set_program_version(${{ env.APP_NAME }} \"$tag\")/" CMakeLists.txt   
                 else
                      echo "The string does not start with 'refs/tags/'."
                 fi
                 grep "pico_set_program_version" CMakeLists.txt
                 
          - name: Install Pico SDk
            run: |
                 cd $HOME && \
                 git clone https://github.com/raspberrypi/pico-sdk.git --branch master && \
                 cd pico-sdk/ && \
                 git submodule update --init && \
                 cd lib/tinyusb &&
                 git checkout 08f9ed67c92421cbd0bc09270d2f363886681866

          - name: Install picotool
            run: |
                 cd $HOME && \
                 export PICO_SDK_PATH=$HOME/pico-sdk && \
                 git clone https://github.com/raspberrypi/picotool.git --branch master && \
                 cd picotool/ && \
                 mkdir build && \
                 cd build && \
                 cmake .. && \
                 make

          - name: Build the project
            run: |
                 export PICO_SDK_PATH=$HOME/pico-sdk && \
                 mkdir build && cd build && \
                 cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DOVERCLOCKING=366 .. && \
                 make
